- require "browser"
- if !support_primary_locale?
  #warning-banner
    = link_to "Non-English translations coming soon. Help us translate!", 'https://docs.google.com/forms/d/1v72iM0reILSCbyJo4870yYXzMKmSXd9IlOc5usL3xQo/viewform'
- elsif browser.ie8?
  #warning-banner= t("compatability.working")
- elsif !browser.modern?
  #warning-banner= t("compatability.upgrade")

.navbar-static-top.header
  .container
    .navbar-header
      .row{style: "min-height:85px;"}
        .header_logo
          = link_to(image_tag('logo.png'), root_path, style: "background-color:transparent;")

        .header_middle
          - if @script_level
            .header_level
              - script = @script || Script.twenty_hour_script
              - count = @game.levels.count
              - game_levels = current_user ? current_user.levels_from_script(script, @game.id) : script.script_levels_from_game(@game.id)

              .header_text
                -if (script.multiple_games?)
                  #{t(:stage)} #{@game.id}:
                = t(:puzzle)
              - game_levels.each do |sl|
                %a{href:build_script_level_path(sl)}
                - result = 0
                - if current_user
                  - result = sl.user_level ? sl.user_level.best_result : 0
                - elsif (session[:progress] && session[:progress][sl.level_id])
                  - result = session[:progress][sl.level_id]
                - passed = result >= Activity::MINIMUM_PASS_RESULT

                - if sl.level_id == @script_level.level_id
                  .level_current_header{class:"level_highlight"}
                    = @script_level.game_chapter
                - elsif (sl.game_chapter == count)
                  %a.level_highlight{class:passed ? "level_aced" : "level_undone", href:build_script_level_path(sl)}
                    = count
                - else
                  %a.other_level{class:passed ? "level_aced" : "level_undone", href:build_script_level_path(sl)}
              - if script.hoc?
                .header_separator
                .header_finished_link
                  %a{href:"http://code.org/api/hour/finish"}
                    = t('nav.header.finished_hoc')
              - if script.trophies
                - if current_user
                  - progress = current_user.progress(script)
                  .header_separator
                  %a.header_trophy_link{href:"#",id:"headerPopupLink",onclick:"handlePopupClick();"}
                    .header_text= t(:trophies)
                    .header_status_bar= progress['current_trophies']
                    .header_text= "#{t(:of)} #{progress['max_trophies']}"
                  .header_separator
                  %a.header_popup_link{href:"#",id:"headerPopupLink",onclick:"handlePopupClick();"}
                    .header_popup_link_glyph
                      &#x25BC;
                    .header_popup_link_text= t(:more)
                - else
                  .header_separator
                  %a.header_finished_link{href:new_user_registration_path}
                    = t('nav.header.sign_in_to_save')

        .header_user
          - if user_signed_in?
            .user_menu
              = link_to raw("#{t('nav.user.label', username: h(current_user.username))} &#x25BC;"), '#', onclick: "$('.user_options').toggle();return false;"
              %div{ style: 'position:relative;top:3px;'}
                .user_options{style: 'display: none;color: black;position:absolute; right:0'}
                  - if current_user.teacher?
                    = link_to t('nav.user.classroom'), followers_path
                    %hr
                  = link_to t('nav.user.stats'), root_path
                  %br/
                  = link_to t('nav.user.settings'), edit_user_registration_path
                  %br/
                  = link_to t('nav.user.prizes'), 'http://code.org/prize'
                  %br/
                  = link_to t('nav.user.logout'), destroy_user_session_path, method: :delete
          - else
            = link_to t('nav.user.signup'), new_user_registration_path
            |
            = link_to t('nav.user.signin'), new_user_session_path

- if current_user
  .header_popup{id:"headerPopup"}
    .header_popup_header
      %span= t('nav.popup.progress')
      .header_text{style:"float:right;"}= t('nav.popup.lines', lines:current_user.total_lines)
    .header_popup_body{id:"headerPopupBody"}
    .header_popup_footer
      %div{id:"popupClose",onclick:"togglePopup();"}
        = t('nav.popup.close')
:javascript
  togglePopup = function () {
    $("#headerPopup").toggle();
    if ($("#headerPopup").css('display') == 'none') {
      $(".header_popup_link_glyph").html("&#x25BC;");
      $(".header_popup_link_text").html("#{t(:more)}");
    }
    else {
      $(".header_popup_link_glyph").html("&#x25B2;");
      $(".header_popup_link_text").html("#{t(:less)}");
    }
  }
  handlePopupClick = function () {
    if ($("#headerPopupBody").html() == "") {
      $.ajax({url:'#{header_stats_path()}',success:function(result) {
          $("#headerPopupBody").html(result);
          togglePopup();
        }
      });
    }
    else {
      togglePopup();
    }
  }
  switchLocale = function() {
    $('#localeForm').submit();
  }
